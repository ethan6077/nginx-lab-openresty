daemon off;
master_process off;
worker_processes 1;
events {
    worker_connections 1024;
}
http {
    server {
        listen 80;
        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.say("<p>hello world from openresty</p>")
            }
        }

        location /api {
            access_by_lua_block {
                local reauinf = ngx.var.cookie_REAUINF
                if reauinf == nil or reauinf == '' then
                    ngx.status = 401
                    return ngx.exit(ngx.HTTP_UNAUTHORIZED);
                end
            }
            set $cid "";
            set $backend_api_version "";
            rewrite_by_lua_block {
                function parse(reauinf)
                    local reauinf = ngx.decode_base64(reauinf)
                    local cjson = require "cjson"
                    return cjson.decode(reauinf).cid
                end
                if ngx.var.cookie_REAUINF then
                    local status, consumerId = pcall(parse, ngx.var.cookie_REAUINF);
                    if not status then
                        ngx.status = 401
                        return ngx.exit(ngx.HTTP_UNAUTHORIZED)
                    else
                        ngx.print(" | consumer_id: ", consumerId)
                        ngx.var.cid = consumerId
                        consumer_id_last_digit = string.sub(consumerId, -1)
                        ngx.print(" | consumer_id_last_digit: ", consumer_id_last_digit)
                        if consumer_id_last_digit == "1" then
                            ngx.print(" | redirect traffic to v1")
                            ngx.var.backend_api_version = "/v1"
                            ngx.print(" | backend_api_version: ", ngx.var.backend_api_version)
                        else
                            ngx.print(" | keep traffic with v0")
                        end
                    end
                end
            }
            default_type text/html;
            content_by_lua_block {
                ngx.say("<p>hello from api!</p>")
            }
        }

    }
}
